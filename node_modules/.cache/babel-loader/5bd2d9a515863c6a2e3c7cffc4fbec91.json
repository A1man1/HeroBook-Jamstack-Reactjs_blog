{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aman/project/front end react/herobook/src/blog/Blog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Grid, Box, isWidthUp, withWidth, withStyles } from \"@material-ui/core\";\nimport BlogCard from \"./BlogCard\";\n\nconst styles = theme => ({\n  blogContentWrapper: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(4)\n    },\n    maxWidth: 1280,\n    width: \"100%\"\n  },\n  wrapper: {\n    minHeight: \"60vh\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction getVerticalBlogPosts(width, blogPosts) {\n  const gridRows = [[], [], []];\n  let rows;\n  let xs;\n\n  if (isWidthUp(\"md\", width)) {\n    rows = 3;\n    xs = 4;\n  } else if (isWidthUp(\"sm\", width)) {\n    rows = 2;\n    xs = 6;\n  } else {\n    rows = 1;\n    xs = 12;\n  }\n\n  blogPosts.forEach((blogPost, index) => {\n    gridRows[index % rows].push( /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mb: 3,\n        children: /*#__PURE__*/_jsxDEV(BlogCard, {\n          src: blogPost.imageSrc,\n          title: blogPost.title,\n          snippet: blogPost.snippet,\n          topic: blogPost.topic,\n          date: blogPost.date,\n          url: blogPost.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, blogPost.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this));\n  });\n  return gridRows.map((element, index) => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: xs,\n    children: element\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n}\n\nfunction Blog(props) {\n  _s();\n\n  const {\n    classes,\n    width,\n    blogPosts,\n    selectBlog\n  } = props;\n  useEffect(() => {\n    selectBlog();\n  }, [selectBlog]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    className: classNames(classes.wrapper, \"lg-p-top\"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.blogContentWrapper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: getVerticalBlogPosts(width, blogPosts)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blog, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Blog;\nBlog.propTypes = {\n  selectBlog: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  blogposts: PropTypes.arrayOf(PropTypes.object)\n};\nexport default withWidth()(withStyles(styles, {\n  withTheme: true\n})(Blog));\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/home/aman/project/front end react/herobook/src/blog/Blog.js"],"names":["React","useEffect","PropTypes","classNames","Grid","Box","isWidthUp","withWidth","withStyles","BlogCard","styles","theme","blogContentWrapper","marginLeft","spacing","marginRight","breakpoints","up","maxWidth","width","wrapper","minHeight","noDecoration","textDecoration","getVerticalBlogPosts","blogPosts","gridRows","rows","xs","forEach","blogPost","index","push","imageSrc","title","snippet","topic","date","url","id","map","element","Blog","props","classes","selectBlog","propTypes","func","isRequired","object","string","blogposts","arrayOf","withTheme"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Grid, Box, isWidthUp, withWidth, withStyles } from \"@material-ui/core\";\nimport BlogCard from \"./BlogCard\";\n\nconst styles = theme => ({\n  blogContentWrapper: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(4)\n    },\n    maxWidth: 1280,\n    width: \"100%\"\n  },\n  wrapper: {\n    minHeight: \"60vh\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction getVerticalBlogPosts(width, blogPosts) {\n  const gridRows = [[], [], []];\n  let rows;\n  let xs;\n  if (isWidthUp(\"md\", width)) {\n    rows = 3;\n    xs = 4;\n  } else if (isWidthUp(\"sm\", width)) {\n    rows = 2;\n    xs = 6;\n  } else {\n    rows = 1;\n    xs = 12;\n  }\n  blogPosts.forEach((blogPost, index) => {\n    gridRows[index % rows].push(\n      <Grid key={blogPost.id} item xs={12}>\n        <Box mb={3}>\n          <BlogCard\n            src={blogPost.imageSrc}\n            title={blogPost.title}\n            snippet={blogPost.snippet}\n            topic={blogPost.topic}\n            date={blogPost.date}\n            url={blogPost.url}\n          />\n        </Box>\n      </Grid>\n    );\n  });\n  return gridRows.map((element, index) => (\n    <Grid key={index} item xs={xs}>\n      {element}\n    </Grid>\n  ));\n}\n\nfunction Blog(props) {\n  const { classes, width, blogPosts, selectBlog } = props;\n\n  useEffect(() => {\n    selectBlog();\n  }, [selectBlog]);\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      className={classNames(classes.wrapper, \"lg-p-top\")}\n    >\n      <div className={classes.blogContentWrapper}>\n        <Grid container spacing={3}>\n          {getVerticalBlogPosts(width, blogPosts)}\n        </Grid>\n      </div>\n    </Box>\n  );\n}\n\nBlog.propTypes = {\n  selectBlog: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  blogposts: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(Blog));\n"]},"metadata":{},"sourceType":"module"}